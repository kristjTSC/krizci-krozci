/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo;

import java.io.*;
import java.util.logging.*;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Kristjan
 */
public class NadzornaSpremeni extends javax.swing.JFrame {

    public static boolean hocesSpremenit = false;

    /**
     * Creates new form Registracija
     */
    public NadzornaSpremeni() {
        initComponents();
        try {
            BufferedReader br = new BufferedReader(new FileReader("registracija.txt"));
            String vrstica;
            while (br.ready()) {
                vrstica = br.readLine();
                String[] tab = vrstica.split("¸");
                if (tab[0].equalsIgnoreCase(ZacetnoOkno.vpisanUser)) {
                    pozdrav.setText("Kaj želiš spremeniti, " + tab[1] + "?");
                    avatarLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo/avatarji/" + tab[6] + ".png")));
                    break;
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NadzornaSpremeni.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NadzornaSpremeni.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pozdrav = new javax.swing.JLabel();
        avatarLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sprememba podatkov");
        setMinimumSize(new java.awt.Dimension(580, 300));
        setResizable(false);
        getContentPane().setLayout(null);

        pozdrav.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        pozdrav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pozdrav.setText("Kaj želiš spremeniti, [ime]?");
        getContentPane().add(pozdrav);
        pozdrav.setBounds(20, 20, 450, 50);

        avatarLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                avatarLabelMouseClicked(evt);
            }
        });
        getContentPane().add(avatarLabel);
        avatarLabel.setBounds(490, 10, 80, 80);

        jButton2.setText("Nazaj");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(450, 250, 110, 30);

        jButton1.setText("Uporabniško ime");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(40, 80, 150, 30);

        jButton6.setText("Ime");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(350, 80, 150, 30);

        jButton7.setText("E-naslov");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(40, 140, 150, 30);

        jButton8.setText("Geslo");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(350, 140, 150, 30);

        jButton9.setText("Varnostno vprašanje");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(40, 200, 150, 30);

        jButton10.setText("Avatar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10);
        jButton10.setBounds(350, 200, 150, 30);

        setSize(new java.awt.Dimension(596, 340));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void avatarLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avatarLabelMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_avatarLabelMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new NadzornaKajZelis().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String upIme = JOptionPane.showInputDialog("Vnesi novo uporabniško ime");
        try {
            BufferedReader br = new BufferedReader(new FileReader("registracija.txt"));
            String vrstica;
            while (br.ready()) {
                vrstica = br.readLine();
                String[] tab = vrstica.split("¸");
                String user = tab[0];
                if (user.equalsIgnoreCase(upIme)) {
                    JOptionPane.showMessageDialog(null, "Uporabniško ime je že zasedeno!");
                }
            }
            br.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ZacetnoOkno.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ZacetnoOkno.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (upIme.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Uporabniško ime ne sme biti prazno!");
        } else if (upIme.contains(" ")) {
            JOptionPane.showMessageDialog(null, "Uporabniško ime ne sme vsebovati presledka!");
        } else if (upIme.contains("¸")) {
            JOptionPane.showMessageDialog(null, "Uporabil si ilegalen simbol \"¸\"!");
        } else if (upIme.length() > 22) {
            JOptionPane.showMessageDialog(null, "Uporabniško ime mora biti krajše!");
        } else {
            try {
                BufferedReader br = new BufferedReader(new FileReader("registracija.txt"));
                StringBuilder sBuild = new StringBuilder();
                String vrstica;
                String tUporabnik = null;
                while (br.ready()) {
                    vrstica = br.readLine();
                    String[] tab = vrstica.split("¸");
                    String uporabnisko = tab[0];
                    if (uporabnisko.equalsIgnoreCase(ZacetnoOkno.vpisanUser)) {
                        tUporabnik = upIme;
                        String posodobljeno = upIme + "¸" + tab[1] + "¸" + tab[2] + "¸" + tab[3] + "¸" + tab[4] + "¸" + tab[5] + "¸" + tab[6];
                        sBuild.append(posodobljeno);
                        sBuild.append("\n");

                    } else {
                        sBuild.append(vrstica);
                        sBuild.append("\n");
                    }

                }
                FileWriter file = new FileWriter("registracija.txt");
                BufferedWriter bw = new BufferedWriter(file);
                bw.write(sBuild.toString());

                bw.close();
                br.close();
                ZacetnoOkno.vpisanUser = tUporabnik;
                JOptionPane.showMessageDialog(null, "Uporabniško ime je spremenjeno!");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(PozabljenoGesloSprememba.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PozabljenoGesloSprememba.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String ime = JOptionPane.showInputDialog("Vnesi novo ime");
        if (ime.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ime ne sme biti prazno!");
        } else if (ime.contains("¸")) {
            JOptionPane.showMessageDialog(null, "Uporabil si ilegalen simbol \"¸\"!");
        } else {
            try {
                BufferedReader br = new BufferedReader(new FileReader("registracija.txt"));
                StringBuilder sBuild = new StringBuilder();
                String vrstica;
                while (br.ready()) {
                    vrstica = br.readLine();
                    String[] tab = vrstica.split("¸");
                    String uporabnisko = tab[0];
                    if (uporabnisko.equalsIgnoreCase(ZacetnoOkno.vpisanUser)) {
                        String posodobljeno = tab[0] + "¸" + ime + "¸" + tab[2] + "¸" + tab[3] + "¸" + tab[4] + "¸" + tab[5] + "¸" + tab[6];
                        sBuild.append(posodobljeno);
                        sBuild.append("\n");

                    } else {
                        sBuild.append(vrstica);
                        sBuild.append("\n");
                    }

                }
                FileWriter file = new FileWriter("registracija.txt");
                BufferedWriter bw = new BufferedWriter(file);
                bw.write(sBuild.toString());

                bw.close();
                br.close();
                JOptionPane.showMessageDialog(null, "Ime je spremenjeno!");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(PozabljenoGesloSprememba.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PozabljenoGesloSprememba.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String mail = JOptionPane.showInputDialog("Vnesi nov E-naslov");
        if (mail.isEmpty()) {
            JOptionPane.showMessageDialog(null, "E-naslov ne sme biti prazen!");
        }
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."
                + "[a-zA-Z0-9_+&*-]+)*@"
                + "(?:[a-zA-Z0-9-]+\\.)+[a-z"
                + "A-Z]{2,7}$";

        Pattern pat = Pattern.compile(emailRegex);
        if (!pat.matcher(mail).matches()) {
            JOptionPane.showMessageDialog(null, "Format E-naslova ni pravilen!");
        } else {
            try {
                BufferedReader br = new BufferedReader(new FileReader("registracija.txt"));
                StringBuilder sBuild = new StringBuilder();
                String vrstica;
                while (br.ready()) {
                    vrstica = br.readLine();
                    String[] tab = vrstica.split("¸");
                    String uporabnisko = tab[0];
                    if (uporabnisko.equalsIgnoreCase(ZacetnoOkno.vpisanUser)) {
                        ZacetnoOkno.vpisanUser = uporabnisko;
                        String posodobljeno = tab[0] + "¸" + tab[1] + "¸" + tab[2] + "¸" + mail + "¸" + tab[4] + "¸" + tab[5] + "¸" + tab[6];
                        sBuild.append(posodobljeno);
                        sBuild.append("\n");

                    } else {
                        sBuild.append(vrstica);
                        sBuild.append("\n");
                    }

                }
                FileWriter file = new FileWriter("registracija.txt");
                BufferedWriter bw = new BufferedWriter(file);
                bw.write(sBuild.toString());

                bw.close();
                br.close();
                JOptionPane.showMessageDialog(null, "E-naslov je spremenjen!");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(PozabljenoGesloSprememba.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PozabljenoGesloSprememba.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        hocesSpremenit = true;
        new PozabljenoGesloSprememba().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        new NadzornaSpremeniVprasanje().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        new NadzornaSpremeniAvatar().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NadzornaSpremeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NadzornaSpremeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NadzornaSpremeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NadzornaSpremeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NadzornaSpremeni().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel pozdrav;
    // End of variables declaration//GEN-END:variables
}
